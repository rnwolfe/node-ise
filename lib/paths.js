const PATHS = {};
PATHS.LOGIN = 'LoginAction.do';
PATHS.LOGOUT = 'logout.jsp';

PATHS.API = 'rs/uiapi/';
PATHS.MNT = `${PATHS.API}mnt/`;
PATHS.VISIBILITY = `${PATHS.API}visibility/`;

// RADIUS POLICIES
PATHS.RADIUS_POLICY_SETS = `${PATHS.API}policytable/radius/`;
PATHS.RADIUS_AUTHENTICATION_POLICY = (id) =>
  `${PATHS.RADIUS_POLICY_SETS + id}/authentication/`;
PATHS.RADIUS_AUTHORIZATION_POLICY = (id) =>
  `${PATHS.RADIUS_POLICY_SETS + id}/authorization/`;
PATHS.RADIUS_SECURITY_GROUPS = `${PATHS.RADIUS_POLICY_SETS}results/securityGroups/`;
PATHS.RADIUS_SERVICE_NAMES = `${PATHS.RADIUS_POLICY_SETS}results/serviceName/`;
PATHS.RADIUS_IDENTITY_STORES = `${PATHS.RADIUS_POLICY_SETS}results/identityStores/`;
PATHS.RADIUS_FAILOVERS = `${PATHS.RADIUS_POLICY_SETS}results/failovers/`;
PATHS.RADIUS_AUTHZ_PROFILES = `${PATHS.RADIUS_POLICY_SETS}results/profiles/`;
PATHS.RADIUS_LOCAL_EXCEPTIONS = (id) =>
  `${PATHS.RADIUS_POLICY_SETS + id}/exceptions`;
PATHS.RADIUS_GLOBAL_EXCEPTIONS = `${PATHS.RADIUS_POLICY_SETS}0/exceptions`;

// TACACS POLICIES
PATHS.TACACS_POLICY_SETS = `${PATHS.API}policytable/tacacs/`;
PATHS.TACACS_AUTHENTICATION_POLICY = (id) =>
  `${PATHS.TACACS_POLICY_SETS + id}/authentication/`;
PATHS.TACACS_AUTHORIZATION_POLICY = (id) =>
  `${PATHS.TACACS_POLICY_SETS + id}/authorization/`;
PATHS.TACACS_SERVICE_NAMES = `${PATHS.TACACS_POLICY_SETS}results/serviceName/`;
PATHS.TACACS_IDENTITY_STORES = `${PATHS.TACACS_POLICY_SETS}results/identityStores/`;
PATHS.TACACS_FAILOVERS = `${PATHS.TACACS_POLICY_SETS}results/failovers/`;
PATHS.TACACS_SHELL_PROFILES = `${PATHS.TACACS_POLICY_SETS}results/profiles/`;
PATHS.TACACS_COMMAND_SETS = `${PATHS.TACACS_POLICY_SETS}results/commandSets`;
PATHS.TACACS_LOCAL_EXCEPTIONS = (id) =>
  `${PATHS.TACACS_POLICY_SETS + id}/exceptions`;
PATHS.TACACS_GLOBAL_EXCEPTIONS = `${PATHS.TACACS_POLICY_SETS}0/exceptions`;

// SXP
PATHS.SXP_BINDINGS = `${PATHS.API}sxp/allbindings`;

// METRICS
PATHS.METRIC = `${PATHS.API}visibility/fetchMetricData/`;
PATHS.TOTAL_ENDPOINTS_METRIC = `${PATHS.METRIC}totalEndpoints`;
PATHS.ACTIVE_ENDPOINTS_METRIC = `${PATHS.METRIC}activeEndpoints`;
PATHS.REJECTED_ENDPOINTS_METRIC = `${PATHS.METRIC}rejectedEndpoints`;
PATHS.ANOMALOUS_ENDPOINTS_METRIC = `${PATHS.METRIC}anomalousEndpoints`;
PATHS.AUTHENTICATED_GUEST_METRIC = `${PATHS.METRIC}authenticateGuest`;
PATHS.BYOD_ENDPOINTS_METRIC = `${PATHS.METRIC}byodEndpoints`;
PATHS.GENERIC_DASHBOARD = `${PATHS.API}dashboard/generic/fetchData`;
PATHS.CHART = `${PATHS.API}visibility/fetchChartData/`;
PATHS.DEVICE_COMPLIANCE_CHART = `${PATHS.CHART}DeviceCompliance`;
PATHS.ENDPOINT_GROUP_CHART = `${PATHS.CHART}EndPointGroup`;
PATHS.ENDPOINT_POLICY_CHART = `${PATHS.CHART}EndPointPolicy`;
PATHS.IDENTITY_GROUP_CHART = `${PATHS.CHART}IdentityGroup`;
PATHS.ENDPOINT_PROFILER_SERVER_CHART = `${PATHS.CHART}EndPointProfilerServer`;
PATHS.OPERATING_SYSTEM_CHART = `${PATHS.CHART}operating-system`;
PATHS.NETWORK_DEVICE_CHART = `${PATHS.CHART}NetworkDeviceName`;
PATHS.DEVICE_TYPE_CHART = `${PATHS.CHART}Device Type`;
PATHS.LOCATION_CHART = `${PATHS.CHART}Location`;

// APPLICATION DATA
PATHS.APPLICATION_CATEGORY_CHART = `${PATHS.API}visibility/fetchApplicationsByCategory/`;

// VULNERABILITY DATA
PATHS.TOTAL_VULNERABLE_ENDPOINTS = `${PATHS.API}visibility/fetchTotalVulnerableEndPoints/0`;
PATHS.ALL_VULNERABILITY_DATA = `${PATHS.API}visibility/fetchVulnerabilityData/EndPoints/all`;
PATHS.VULNERABILITY_ENDPOINTS_OVER_TIME = `${PATHS.API}visibility/fetchVulnerabilityEndpointsOverTime/`;

// ENDPOINT DATA
PATHS.ENDPOINTS = `${PATHS.VISIBILITY}`;
PATHS.ENDPOINT_ACTION = `endpointAction.do`;

// IDENTITY GROUPS
PATHS.ENDPOINT_IDENTITY_GROUP_ACTION = `idMgmtEndpointGroupAction.do`;

// PROFILING
PATHS.PROFILER_ACTIONS = `profilerPolicyAction.do`;
PATHS.PROFILER_LIST = `profilerProfileDropDownAction.do`;

// THREAT/COMPROMISE DATA
PATHS.THREAT = `${PATHS.API}charts/compromised/`;
PATHS.TOP_COMPROMISED_ENDPOINTS = `${PATHS.THREAT}compromisedEndpointsTop`;
PATHS.TOP_THREATS = `${PATHS.THREAT}topThreats/incidents/impacted/all`;
PATHS.THREATS_OVER_TIME = `${PATHS.THREAT}compromisedEndpointsTime/`;

// LIVE LOGS
PATHS.RADIUS_LIVE_LOGS = `${PATHS.MNT}authLiveLog/`;
PATHS.RADIUS_LIVE_LOG_COUNTERS = `${PATHS.RADIUS_LIVE_LOGS}counters`;
PATHS.RADIUS_LIVE_SESSIONS = `${PATHS.MNT}livesession`;
PATHS.TACACS_LIVE_LOGS = `${PATHS.MNT}tacacsLiveLog`;
PATHS.TCNAC_LIVE_LOGS = `${PATHS.API}irf/sasLiveLog`;

// NODE DATA
PATHS.NODES = `${PATHS.API}softwareupdates/nodes`;
module.exports = PATHS;
